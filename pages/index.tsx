import type { NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import { useAppSelector, useAppDispatch } from 'store/hooks';
import {
  decrement,
  increment,
  incrementByAmount,
  selectCount,
} from 'store/slicer/counterSlice';

const Home: NextPage = () => {
  const count = useAppSelector(selectCount);
  const dispatch = useAppDispatch();
  const [incrementAmount, setIncrementAmount] = useState(2);
  return (
    <>
      <Head>
        <title>Create Next App with Typescript/TailwindCSS with Redux</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container flex flex-col items-center justify-center h-screen gap-2 mx-auto prose">
        <h1 className="text-center">
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>
        <p>Redux, TailwindCSS, Typescript and Eslint Configs.</p>

        <div className="flex flex-col items-start justify-center gap-5">
          <p>Redux is a predictable state container for JavaScript apps.</p>
          <div className="flex flex-row justify-between w-full">
            <button
              type="button"
              className="btn btn-primary"
              onClick={() => dispatch(decrement())}
            >
              Decrease
            </button>
            <h1>{count}</h1>
            <button
              type="button"
              className="btn btn-primary"
              onClick={() => dispatch(increment())}
            >
              Increase
            </button>
          </div>
          <div className="flex flex-row items-center justify-center w-full gap-5">
            <input
              type="number"
              className="input input-bordered"
              value={incrementAmount}
              onChange={(e) => setIncrementAmount(+e.target.value)}
            />
            <button
              type="button"
              className="btn btn-primary"
              onClick={() => dispatch(incrementByAmount(incrementAmount))}
            >
              Increase by
            </button>
          </div>
        </div>
      </div>
    </>
  );
};

export default Home;
